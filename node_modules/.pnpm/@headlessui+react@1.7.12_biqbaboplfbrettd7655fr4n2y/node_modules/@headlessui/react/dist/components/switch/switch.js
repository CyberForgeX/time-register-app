import i,{Fragment as x,createContext as R,useContext as A,useMemo as w,useRef as H,useState as F,useEffect as U}from"react";import{forwardRefWithAs as _,render as E,compact as K}from'../../utils/render.js';import{useId as M}from'../../hooks/use-id.js';import{Keys as P}from'../keyboard.js';import{isDisabledReactIssue7711 as I}from'../../utils/bugs.js';import{Label as B,useLabels as O}from'../label/label.js';import{Description as W,useDescriptions as N}from'../description/description.js';import{useResolveButtonType as J}from'../../hooks/use-resolve-button-type.js';import{useSyncRefs as X}from'../../hooks/use-sync-refs.js';import{Hidden as j,Features as $}from'../../internal/hidden.js';import{attemptSubmit as q}from'../../utils/form.js';import{useEvent as u}from'../../hooks/use-event.js';import{useControllable as z}from'../../hooks/use-controllable.js';import{useDisposables as Q}from'../../hooks/use-disposables.js';let y=R(null);y.displayName="GroupContext";let V=x;function Y(a){let[n,s]=F(null),[p,m]=O(),[o,f]=N(),c=w(()=>({switch:n,setSwitch:s,labelledby:p,describedby:o}),[n,s,p,o]),h={},T=a;return i.createElement(f,{name:"Switch.Description"},i.createElement(m,{name:"Switch.Label",props:{onClick(){n&&(n.click(),n.focus({preventScroll:!0}))}}},i.createElement(y.Provider,{value:c},E({ourProps:h,theirProps:T,defaultTag:V,name:"Switch.Group"}))))}let Z="button";function ee(a,n){let s=M(),{id:p=`headlessui-switch-${s}`,checked:m,defaultChecked:o=!1,onChange:f,name:c,value:h,...T}=a,t=A(y),d=H(null),C=X(d,n,t===null?null:t.setSwitch),[r,l]=z(m,f,o),b=u(()=>l==null?void 0:l(!r)),D=u(e=>{if(I(e.currentTarget))return e.preventDefault();e.preventDefault(),b()}),g=u(e=>{e.key===P.Space?(e.preventDefault(),b()):e.key===P.Enter&&q(e.currentTarget)}),L=u(e=>e.preventDefault()),k=w(()=>({checked:r}),[r]),v={id:p,ref:C,role:"switch",type:J(a,d),tabIndex:0,"aria-checked":r,"aria-labelledby":t==null?void 0:t.labelledby,"aria-describedby":t==null?void 0:t.describedby,onClick:D,onKeyUp:g,onKeyPress:L},G=Q();return U(()=>{var S;let e=(S=d.current)==null?void 0:S.closest("form");e&&o!==void 0&&G.addEventListener(e,"reset",()=>{l(o)})},[d,l]),i.createElement(i.Fragment,null,c!=null&&r&&i.createElement(j,{features:$.Hidden,...K({as:"input",type:"checkbox",hidden:!0,readOnly:!0,checked:r,name:c,value:h})}),E({ourProps:v,theirProps:T,slot:k,defaultTag:Z,name:"Switch"}))}let te=_(ee),ne=Y,ke=Object.assign(te,{Group:ne,Label:B,Description:W});export{ke as Switch};
